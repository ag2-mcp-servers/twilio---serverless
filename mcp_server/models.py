# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T11:11:53+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import AnyUrl, BaseModel, Field, constr


class AssetVersionEnumVisibility(Enum):
    public = 'public'
    private = 'private'
    protected = 'protected'


class BuildEnumRuntime(Enum):
    node8 = 'node8'
    node10 = 'node10'
    node12 = 'node12'
    node14 = 'node14'
    node16 = 'node16'


class BuildEnumStatus(Enum):
    building = 'building'
    completed = 'completed'
    failed = 'failed'


class BuildStatusEnumStatus(Enum):
    building = 'building'
    completed = 'completed'
    failed = 'failed'


class FunctionVersionEnumVisibility(Enum):
    public = 'public'
    private = 'private'
    protected = 'protected'


class LogEnumLevel(Enum):
    info = 'info'
    warn = 'warn'
    error = 'error'


class ServerlessV1Service(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.',
    )
    date_created: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the Service resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    date_updated: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the Service resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    domain_base: Optional[str] = Field(
        None,
        description='The base domain name for this Service, which is a combination of the unique name and a randomly generated string.',
    )
    friendly_name: Optional[str] = Field(
        None,
        description='The string that you assigned to describe the Service resource.',
    )
    include_credentials: Optional[bool] = Field(
        None,
        description='Whether to inject Account credentials into a function invocation context.',
    )
    links: Optional[Dict[str, Any]] = Field(
        None, description="The URLs of the Service's nested resources."
    )
    sid: Optional[
        constr(pattern=r'^ZS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The unique string that we created to identify the Service resource.',
    )
    ui_editable: Optional[bool] = Field(
        None,
        description="Whether the Service resource's properties and subresources can be edited via the UI.",
    )
    unique_name: Optional[str] = Field(
        None,
        description="A user-defined string that uniquely identifies the Service resource. It can be used in place of the Service resource's `sid` in the URL to address the Service resource.",
    )
    url: Optional[AnyUrl] = Field(
        None, description='The absolute URL of the Service resource.'
    )


class ServerlessV1ServiceAsset(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Asset resource.',
    )
    date_created: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the Asset resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    date_updated: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the Asset resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    friendly_name: Optional[str] = Field(
        None,
        description='The string that you assigned to describe the Asset resource. It can be a maximum of 255 characters.',
    )
    links: Optional[Dict[str, Any]] = Field(
        None, description="The URLs of the Asset resource's nested resources."
    )
    service_sid: Optional[
        constr(pattern=r'^ZS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the Service that the Asset resource is associated with.',
    )
    sid: Optional[
        constr(pattern=r'^ZH[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The unique string that we created to identify the Asset resource.',
    )
    url: Optional[AnyUrl] = Field(
        None, description='The absolute URL of the Asset resource.'
    )


class ServerlessV1ServiceAssetAssetVersion(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Asset Version resource.',
    )
    asset_sid: Optional[
        constr(pattern=r'^ZH[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the Asset resource that is the parent of the Asset Version.',
    )
    date_created: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the Asset Version resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    path: Optional[str] = Field(
        None,
        description="The URL-friendly string by which the Asset Version can be referenced. It can be a maximum of 255 characters. All paths begin with a forward slash ('/'). If an Asset Version creation request is submitted with a path not containing a leading slash, the path will automatically be prepended with one.",
    )
    service_sid: Optional[
        constr(pattern=r'^ZS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the Service that the Asset Version resource is associated with.',
    )
    sid: Optional[
        constr(pattern=r'^ZN[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The unique string that we created to identify the Asset Version resource.',
    )
    url: Optional[AnyUrl] = Field(
        None, description='The absolute URL of the Asset Version resource.'
    )
    visibility: Optional[AssetVersionEnumVisibility] = Field(
        None,
        description='The access control that determines how the Asset Version resource can be accessed. Can be:  `public`, `protected`, or `private`.',
    )


class ServerlessV1ServiceBuild(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Build resource.',
    )
    asset_versions: Optional[List] = Field(
        None,
        description='The list of Asset Version resource SIDs that are included in the Build.',
    )
    date_created: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the Build resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    date_updated: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the Build resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    dependencies: Optional[List] = Field(
        None,
        description='A list of objects that describe the Dependencies included in the Build. Each object contains the `name` and `version` of the dependency.',
    )
    function_versions: Optional[List] = Field(
        None,
        description='The list of Function Version resource SIDs that are included in the Build.',
    )
    links: Optional[Dict[str, Any]] = None
    runtime: Optional[BuildEnumRuntime] = Field(
        None,
        description='The Runtime version that will be used to run the Build resource when it is deployed.',
    )
    service_sid: Optional[
        constr(pattern=r'^ZS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the Service that the Build resource is associated with.',
    )
    sid: Optional[
        constr(pattern=r'^ZB[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The unique string that we created to identify the Build resource.',
    )
    status: Optional[BuildEnumStatus] = Field(
        None,
        description='The status of the Build. Can be: `building`, `completed`, or `failed`.',
    )
    url: Optional[AnyUrl] = Field(
        None, description='The absolute URL of the Build resource.'
    )


class ServerlessV1ServiceBuildBuildStatus(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Build resource.',
    )
    service_sid: Optional[
        constr(pattern=r'^ZS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the Service that the Build resource is associated with.',
    )
    sid: Optional[
        constr(pattern=r'^ZB[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The unique string that we created to identify the Build resource.',
    )
    status: Optional[BuildStatusEnumStatus] = Field(
        None,
        description='The status of the Build. Can be: `building`, `completed`, or `failed`.',
    )
    url: Optional[AnyUrl] = Field(
        None, description='The absolute URL of the Build Status resource.'
    )


class ServerlessV1ServiceEnvironment(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Environment resource.',
    )
    build_sid: Optional[
        constr(pattern=r'^ZB[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, description='The SID of the build deployed in the environment.')
    date_created: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the Environment resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    date_updated: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the Environment resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    domain_name: Optional[str] = Field(
        None,
        description='The domain name for all Functions and Assets deployed in the Environment, using the Service unique name, a randomly-generated Service suffix, and an optional Environment domain suffix.',
    )
    domain_suffix: Optional[str] = Field(
        None,
        description='A URL-friendly name that represents the environment and forms part of the domain name.',
    )
    links: Optional[Dict[str, Any]] = Field(
        None, description="The URLs of the Environment resource's nested resources."
    )
    service_sid: Optional[
        constr(pattern=r'^ZS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the Service that the Environment resource is associated with.',
    )
    sid: Optional[
        constr(pattern=r'^ZE[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The unique string that we created to identify the Environment resource.',
    )
    unique_name: Optional[str] = Field(
        None,
        description='A user-defined string that uniquely identifies the Environment resource.',
    )
    url: Optional[AnyUrl] = Field(
        None, description='The absolute URL of the Environment resource.'
    )


class ServerlessV1ServiceEnvironmentDeployment(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Deployment resource.',
    )
    build_sid: Optional[
        constr(pattern=r'^ZB[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, description='The SID of the Build for the deployment.')
    date_created: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the Deployment resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    date_updated: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the Deployment resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    environment_sid: Optional[
        constr(pattern=r'^ZE[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, description='The SID of the Environment for the Deployment.')
    service_sid: Optional[
        constr(pattern=r'^ZS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the Service that the Deployment resource is associated with.',
    )
    sid: Optional[
        constr(pattern=r'^ZD[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The unique string that we created to identify the Deployment resource.',
    )
    url: Optional[AnyUrl] = Field(
        None, description='The absolute URL of the Deployment resource.'
    )


class ServerlessV1ServiceEnvironmentLog(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Log resource.',
    )
    build_sid: Optional[
        constr(pattern=r'^ZB[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, description='The SID of the build that corresponds to the log.')
    date_created: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the Log resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    deployment_sid: Optional[
        constr(pattern=r'^ZD[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None, description='The SID of the deployment that corresponds to the log.'
    )
    environment_sid: Optional[
        constr(pattern=r'^ZE[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, description='The SID of the environment in which the log occurred.')
    function_sid: Optional[
        constr(pattern=r'^ZH[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None, description='The SID of the function whose invocation produced the log.'
    )
    level: Optional[LogEnumLevel] = Field(
        None, description='The log level. Can be: `info`, `warn`, or `error`.'
    )
    message: Optional[str] = Field(None, description='The log message.')
    request_sid: Optional[
        constr(pattern=r'^RQ[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, description='The SID of the request associated with the log.')
    service_sid: Optional[
        constr(pattern=r'^ZS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the Service that the Log resource is associated with.',
    )
    sid: Optional[
        constr(pattern=r'^NO[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The unique string that we created to identify the Log resource.',
    )
    url: Optional[AnyUrl] = Field(
        None, description='The absolute URL of the Log resource.'
    )


class ServerlessV1ServiceEnvironmentVariable(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Variable resource.',
    )
    date_created: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the Variable resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    date_updated: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the Variable resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    environment_sid: Optional[
        constr(pattern=r'^ZE[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None, description='The SID of the Environment in which the Variable exists.'
    )
    key: Optional[str] = Field(
        None, description='A string by which the Variable resource can be referenced.'
    )
    service_sid: Optional[
        constr(pattern=r'^ZS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the Service that the Variable resource is associated with.',
    )
    sid: Optional[
        constr(pattern=r'^ZV[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The unique string that we created to identify the Variable resource.',
    )
    url: Optional[AnyUrl] = Field(
        None, description='The absolute URL of the Variable resource.'
    )
    value: Optional[str] = Field(
        None, description='A string that contains the actual value of the Variable.'
    )


class ServerlessV1ServiceFunction(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Function resource.',
    )
    date_created: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the Function resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    date_updated: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the Function resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    friendly_name: Optional[str] = Field(
        None,
        description='The string that you assigned to describe the Function resource. It can be a maximum of 255 characters.',
    )
    links: Optional[Dict[str, Any]] = Field(
        None, description='The URLs of nested resources of the Function resource.'
    )
    service_sid: Optional[
        constr(pattern=r'^ZS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the Service that the Function resource is associated with.',
    )
    sid: Optional[
        constr(pattern=r'^ZH[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The unique string that we created to identify the Function resource.',
    )
    url: Optional[AnyUrl] = Field(
        None, description='The absolute URL of the Function resource.'
    )


class ServerlessV1ServiceFunctionFunctionVersion(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Function Version resource.',
    )
    date_created: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the Function Version resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    function_sid: Optional[
        constr(pattern=r'^ZH[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the Function resource that is the parent of the Function Version resource.',
    )
    links: Optional[Dict[str, Any]] = None
    path: Optional[str] = Field(
        None,
        description="The URL-friendly string by which the Function Version resource can be referenced. It can be a maximum of 255 characters. All paths begin with a forward slash ('/'). If a Function Version creation request is submitted with a path not containing a leading slash, the path will automatically be prepended with one.",
    )
    service_sid: Optional[
        constr(pattern=r'^ZS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the Service that the Function Version resource is associated with.',
    )
    sid: Optional[
        constr(pattern=r'^ZN[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The unique string that we created to identify the Function Version resource.',
    )
    url: Optional[AnyUrl] = Field(
        None, description='The absolute URL of the Function Version resource.'
    )
    visibility: Optional[FunctionVersionEnumVisibility] = Field(
        None,
        description='The access control that determines how the Function Version resource can be accessed. Can be: `public`, `protected`, or `private`.',
    )


class ServerlessV1ServiceFunctionFunctionVersionFunctionVersionContent(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Function Version resource.',
    )
    content: Optional[str] = Field(
        None, description='The content of the Function Version resource.'
    )
    function_sid: Optional[
        constr(pattern=r'^ZH[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the Function that is the parent of the Function Version.',
    )
    service_sid: Optional[
        constr(pattern=r'^ZS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the Service that the Function Version resource is associated with.',
    )
    sid: Optional[
        constr(pattern=r'^ZN[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The unique string that we created to identify the Function Version resource.',
    )
    url: Optional[AnyUrl] = None


class Meta(BaseModel):
    first_page_url: Optional[AnyUrl] = None
    key: Optional[str] = None
    next_page_url: Optional[AnyUrl] = None
    page: Optional[int] = None
    page_size: Optional[int] = None
    previous_page_url: Optional[AnyUrl] = None
    url: Optional[AnyUrl] = None


class V1ServicesGetResponse(BaseModel):
    meta: Optional[Meta] = None
    services: Optional[List[ServerlessV1Service]] = None


class V1ServicesPostRequest(BaseModel):
    FriendlyName: str = Field(
        ...,
        description='A descriptive string that you create to describe the Service resource. It can be a maximum of 255 characters.',
    )
    IncludeCredentials: Optional[bool] = Field(
        None,
        description='Whether to inject Account credentials into a function invocation context. The default value is `true`.',
    )
    UiEditable: Optional[bool] = Field(
        None,
        description="Whether the Service's properties and subresources can be edited via the UI. The default value is `false`.",
    )
    UniqueName: str = Field(
        ...,
        description='A user-defined string that uniquely identifies the Service resource. It can be used as an alternative to the `sid` in the URL path to address the Service resource. This value must be 50 characters or less in length and be unique.',
    )


class V1ServicesServiceSidAssetsGetResponse(BaseModel):
    assets: Optional[List[ServerlessV1ServiceAsset]] = None
    meta: Optional[Meta] = None


class V1ServicesServiceSidAssetsPostRequest(BaseModel):
    FriendlyName: str = Field(
        ...,
        description='A descriptive string that you create to describe the Asset resource. It can be a maximum of 255 characters.',
    )


class V1ServicesServiceSidAssetsAssetSidVersionsGetResponse(BaseModel):
    asset_versions: Optional[List[ServerlessV1ServiceAssetAssetVersion]] = None
    meta: Optional[Meta] = None


class V1ServicesServiceSidAssetsSidPostRequest(BaseModel):
    FriendlyName: str = Field(
        ...,
        description='A descriptive string that you create to describe the Asset resource. It can be a maximum of 255 characters.',
    )


class V1ServicesServiceSidBuildsGetResponse(BaseModel):
    builds: Optional[List[ServerlessV1ServiceBuild]] = None
    meta: Optional[Meta] = None


class V1ServicesServiceSidBuildsPostRequest(BaseModel):
    AssetVersions: Optional[
        List[constr(pattern=r'^ZN[0-9a-fA-F]{32}$', min_length=34, max_length=34)]
    ] = Field(
        None,
        description='The list of Asset Version resource SIDs to include in the Build.',
    )
    Dependencies: Optional[str] = Field(
        None,
        description='A list of objects that describe the Dependencies included in the Build. Each object contains the `name` and `version` of the dependency.',
    )
    FunctionVersions: Optional[
        List[constr(pattern=r'^ZN[0-9a-fA-F]{32}$', min_length=34, max_length=34)]
    ] = Field(
        None,
        description='The list of the Function Version resource SIDs to include in the Build.',
    )
    Runtime: Optional[str] = Field(
        None,
        description='The Runtime version that will be used to run the Build resource when it is deployed.',
    )


class V1ServicesServiceSidEnvironmentsGetResponse(BaseModel):
    environments: Optional[List[ServerlessV1ServiceEnvironment]] = None
    meta: Optional[Meta] = None


class V1ServicesServiceSidEnvironmentsPostRequest(BaseModel):
    DomainSuffix: Optional[str] = Field(
        None,
        description='A URL-friendly name that represents the environment and forms part of the domain name. It can be a maximum of 16 characters.',
    )
    UniqueName: str = Field(
        ...,
        description='A user-defined string that uniquely identifies the Environment resource. It can be a maximum of 100 characters.',
    )


class V1ServicesServiceSidEnvironmentsEnvironmentSidDeploymentsGetResponse(BaseModel):
    deployments: Optional[List[ServerlessV1ServiceEnvironmentDeployment]] = None
    meta: Optional[Meta] = None


class V1ServicesServiceSidEnvironmentsEnvironmentSidDeploymentsPostRequest(BaseModel):
    BuildSid: Optional[
        constr(pattern=r'^ZB[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, description='The SID of the Build for the Deployment.')


class V1ServicesServiceSidEnvironmentsEnvironmentSidLogsGetResponse(BaseModel):
    logs: Optional[List[ServerlessV1ServiceEnvironmentLog]] = None
    meta: Optional[Meta] = None


class V1ServicesServiceSidEnvironmentsEnvironmentSidVariablesGetResponse(BaseModel):
    meta: Optional[Meta] = None
    variables: Optional[List[ServerlessV1ServiceEnvironmentVariable]] = None


class V1ServicesServiceSidEnvironmentsEnvironmentSidVariablesPostRequest(BaseModel):
    Key: str = Field(
        ...,
        description='A string by which the Variable resource can be referenced. It can be a maximum of 128 characters.',
    )
    Value: str = Field(
        ...,
        description='A string that contains the actual value of the Variable. It can be a maximum of 450 bytes in size.',
    )


class V1ServicesServiceSidEnvironmentsEnvironmentSidVariablesSidPostRequest(BaseModel):
    Key: Optional[str] = Field(
        None,
        description='A string by which the Variable resource can be referenced. It can be a maximum of 128 characters.',
    )
    Value: Optional[str] = Field(
        None,
        description='A string that contains the actual value of the Variable. It can be a maximum of 450 bytes in size.',
    )


class V1ServicesServiceSidFunctionsGetResponse(BaseModel):
    functions: Optional[List[ServerlessV1ServiceFunction]] = None
    meta: Optional[Meta] = None


class V1ServicesServiceSidFunctionsPostRequest(BaseModel):
    FriendlyName: str = Field(
        ...,
        description='A descriptive string that you create to describe the Function resource. It can be a maximum of 255 characters.',
    )


class V1ServicesServiceSidFunctionsFunctionSidVersionsGetResponse(BaseModel):
    function_versions: Optional[List[ServerlessV1ServiceFunctionFunctionVersion]] = None
    meta: Optional[Meta] = None


class V1ServicesServiceSidFunctionsSidPostRequest(BaseModel):
    FriendlyName: str = Field(
        ...,
        description='A descriptive string that you create to describe the Function resource. It can be a maximum of 255 characters.',
    )


class V1ServicesSidPostRequest(BaseModel):
    FriendlyName: Optional[str] = Field(
        None,
        description='A descriptive string that you create to describe the Service resource. It can be a maximum of 255 characters.',
    )
    IncludeCredentials: Optional[bool] = Field(
        None,
        description='Whether to inject Account credentials into a function invocation context.',
    )
    UiEditable: Optional[bool] = Field(
        None,
        description="Whether the Service resource's properties and subresources can be edited via the UI. The default value is `false`.",
    )
